# Generated by Django 4.1 on 2022-08-21 20:18

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Activity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        max_length=512,
                        verbose_name="Short description of what the activity involves",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=128, verbose_name="Activity name"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ActivityPrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "effective_since",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Effective date and time (since)",
                    ),
                ),
                (
                    "effective_until",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Effective until",
                    ),
                ),
                (
                    "is_archived",
                    models.BooleanField(default=False, verbose_name="If in the past"),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Activity price"
                    ),
                ),
                (
                    "activity_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="prices",
                        to="appointments.activity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ActivitySlot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "capacity",
                    models.IntegerField(
                        default=1,
                        verbose_name="How many people is the activity meant for",
                    ),
                ),
                (
                    "duration",
                    models.DurationField(
                        default=datetime.timedelta(seconds=3600),
                        verbose_name="Activity duration",
                    ),
                ),
                ("end_time", models.DateTimeField(verbose_name="Activity end time")),
                (
                    "is_archived",
                    models.BooleanField(default=False, verbose_name="If in the past"),
                ),
                (
                    "is_full",
                    models.BooleanField(
                        default=False, verbose_name="If false, one can still sign up"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Activity price at the time",
                    ),
                ),
                (
                    "start_time",
                    models.DateTimeField(verbose_name="Activity start time"),
                ),
                (
                    "activity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="slots",
                        to="appointments.activity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Horse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("age", models.IntegerField(verbose_name="Age of the horse")),
                (
                    "is_available",
                    models.BooleanField(
                        default=True,
                        verbose_name="Whether the horse is available for activities (is it healthy, etc.)",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=128, verbose_name="Name of the horse"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HorseSkill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        max_length=512,
                        null=True,
                        verbose_name="Skill description",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Skill name")),
            ],
        ),
        migrations.CreateModel(
            name="Venue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=248, verbose_name="Venue name")),
                (
                    "capacity",
                    models.IntegerField(verbose_name="Venue maximum capacity"),
                ),
                (
                    "is_available",
                    models.BooleanField(
                        default=True, verbose_name="Whether the venue is available"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PriceList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "effective_since",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Effective date and time (since)",
                    ),
                ),
                (
                    "effective_until",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Effective until"
                    ),
                ),
                (
                    "is_archived",
                    models.BooleanField(default=False, verbose_name="If in the past"),
                ),
                (
                    "activities",
                    models.ManyToManyField(
                        through="appointments.ActivityPrice", to="appointments.activity"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HorseActivitySlot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "start_time",
                    models.DateTimeField(verbose_name="Activity start time"),
                ),
                (
                    "duration",
                    models.DurationField(
                        default=datetime.timedelta(seconds=3600),
                        verbose_name="Activity duration",
                    ),
                ),
                ("end_time", models.DateTimeField(verbose_name="Activity end time")),
                (
                    "is_available",
                    models.BooleanField(
                        default=True,
                        verbose_name="If the horse is available at given time",
                    ),
                ),
                (
                    "horse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="slots",
                        to="appointments.horse",
                    ),
                ),
                (
                    "slot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="horse_slots",
                        to="appointments.activityslot",
                    ),
                ),
                (
                    "venue",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="horse_slots",
                        to="appointments.venue",
                        verbose_name="Place, where horse is to be found at the time",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="horse",
            name="skills",
            field=models.ManyToManyField(to="appointments.horseskill"),
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "message",
                    models.CharField(max_length=512, verbose_name="Important notes"),
                ),
                (
                    "slot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="appointments.activityslot",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="activityslot",
            name="horses",
            field=models.ManyToManyField(
                through="appointments.HorseActivitySlot",
                to="appointments.horse",
                verbose_name="Horses involved in the activity",
            ),
        ),
        migrations.AddField(
            model_name="activityslot",
            name="instructor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="lessons",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="activityslot",
            name="participants",
            field=models.ManyToManyField(
                related_name="slots", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="activityslot",
            name="venue",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="slots",
                to="appointments.venue",
                verbose_name="Place of activity",
            ),
        ),
        migrations.AddField(
            model_name="activityprice",
            name="pricelist",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="appointments.pricelist",
                verbose_name="Effective pricelist",
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="price",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="activity",
                to="appointments.activityprice",
                verbose_name="Current price",
            ),
        ),
    ]
